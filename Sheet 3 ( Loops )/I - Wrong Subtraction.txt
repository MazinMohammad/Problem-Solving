I - Wrong Subtraction

Little girl Tanya is learning how to decrease a number by one, but she does it wrong with a number consisting of two or more digits. Tanya subtracts one from a number by the following algorithm:

if the last digit of the number is non-zero, she decreases the number by one;
if the last digit of the number is zero, she divides the number by 10 (i.e. removes the last digit).
You are given an integer number nn. Tanya will subtract one from it kk times. Your task is to print the result after all kk subtractions.

It is guaranteed that the result will be positive integer number.

Input
The first line of the input contains two integer numbers nn and kk (2 \le n \le 10^92≤n≤10 
9
 , 1 \le k \le 501≤k≤50) — the number from which Tanya will subtract and the number of subtractions correspondingly.

Output
Print one integer number — the result of the decreasing nn by one kk times.

It is guaranteed that the result will be positive integer number.

Sample 1
Inputcopy	Outputcopy
512 4
50
Sample 2
Inputcopy	Outputcopy
1000000000 9
1
Note
The first example corresponds to the following sequence: 512 \rightarrow 511 \rightarrow 510 \rightarrow 51 \rightarrow 50512→511→510→51→50.

Solution:

#include <iostream>
using namespace std;

int main()
{
   int n, k;
   cin >> n >> k;

   for (int i = 0; i<k; i++)
   {
      if (n%10 == 0)
         n/=10;
      else
         n--;
   }
   
   cout << n;
}
