B - qwerty


Problem Statement
You are given a sequence of 2626 integers P=(P_1,P_2, \ldots ,P_{26})P=(P 
1
​
 ,P 
2
​
 ,…,P 
26
​
 ) consisting of integers from 11 through 2626. It is guaranteed that all elements in PP are distinct.

Print a string SS of length 2626 that satisfies the following condition.

For every ii (1 \leq i \leq 26)(1≤i≤26), the ii-th character of SS is the lowercase English letter that comes P_iP 
i
​
 -th in alphabetical order.
Constraints
1 \leq P_i \leq 261≤P 
i
​
 ≤26
P_i \neq P_jP 
i
​
 

=P 
j
​
  (i \neq j)(i

=j)
All values in input are integers.
Input
Input is given from Standard Input in the following format:

P_1P 
1
​
  P_2P 
2
​
  \ldots… P_{26}P 
26
​
 
Output
Print the string SS.

Sample 1
Inputcopy	Outputcopy
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
abcdefghijklmnopqrstuvwxyz
Sample 2
Inputcopy	Outputcopy
2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
bacdefghijklmnopqrstuvwxyz
Sample 3
Inputcopy	Outputcopy
5 11 12 16 25 17 18 1 7 10 4 23 20 3 2 24 26 19 14 9 6 22 8 13 15 21
eklpyqragjdwtcbxzsnifvhmou


Solution:

#include <iostream>
#include <string>
using namespace std;

int main()
{
  int num[26];
  char alph[27] = {' ','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
  string s;

  for (int i = 0; i<26; i++)
      cin >> num[i];
   
   for (int i = 0; i<26; i++)
      cout << alph[num[i]];
}

Or:


for (int i =0;  i < 26;  i++)
{
   int k;
cin >>  k;
cout << (char) (('a') + (k-1)) << endl;		// using the ascii code
}


Another related question:
alphabetic pyramid

int n;
cin >> n;
for ( int i =n; i>=1; i--)
{
for (int j = 1; j<=i; j++)
cout << (char) ('a') + (k-1) << endl;
}


Another Solution:

#include <iostream>
#include <cmath>
using namespace std;

int main()
{
   int n;
   for (int i = 0; i<26; i++)
   {
      cin >> n;
      cout << (char)(97 + (n-1));
   }
   
}
