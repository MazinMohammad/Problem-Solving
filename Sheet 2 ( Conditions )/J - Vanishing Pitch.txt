J - Vanishing Pitch


Problem Statement
Takahashi and Aoki are playing baseball. Takahashi is the pitcher, and Aoki is the batter.
Takahashi can throw an invisible pitch. When he throws it, the ball moves linearly at a constant speed V \, \mathrm{m / s}Vm/s, and it becomes invisible between the moment TT seconds after throwing and the moment SS seconds after throwing (inclusive). The ball keeps moving when it is invisible.
If the ball is not invisible at the moment the ball is exactly D \, \mathrm{m}Dm away from Takahashi, Aoki can hit the ball. Otherwise, he cannot hit it. Can Aoki hit the ball?

Constraints
1 \le V \le 10001≤V≤1000
1 \le T \lt S \le 10001≤T<S≤1000
1 \le D \le 10001≤D≤1000
All values in input are integers.
Input
Input is given from Standard Input in the following format:

VV TT SS DD
Output
If Aoki can hit the ball, print Yes; otherwise, print No.

Sample 1
Inputcopy	Outputcopy
10 3 5 20
Yes
The ball is exactly 20 \, \mathrm{m}20m away from Takahashi at 22 seconds after throwing.
On the other hand, the ball becomes invisible between 33 and 55 seconds (inclusive) after throwing, so Aoki can hit the ball.

Sample 2
Inputcopy	Outputcopy
10 3 5 30
No
Note that the ball is also invisible at TT seconds and SS seconds after throwing.
Here, the ball is exactly D \, \mathrm{m}Dm away from Takahashi at TT seconds after throwing, so the ball is invisible and cannot be hit by Aoki.



Solution:

#include <iostream>
using namespace std;

int main()
{
   double V, T, S, D;
   cin >> V >> T >> S >> D;

   
   if ( D/V >=T && D/V <= S)     // T <= D/V <= S
      cout << "No";
   else
      cout << "Yes";

}

or

#include <iostream>
using namespace std;

int main()
{
   int V, T, S, D;
   cin >> V >> T >> S >> D;

   
   if ( V * T > D || V * S < D)     
      cout << "Yes";
   else
      cout << "No";

}